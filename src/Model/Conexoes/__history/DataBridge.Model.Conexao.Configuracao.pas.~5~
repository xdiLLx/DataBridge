unit DataBridge.Model.Conexao.Configuracao;

interface

uses
  DataBridge.Model.Conexao.Interfaces,
  System.IOUtils,
  System.SysUtils;

type
  TConfiguracaoBancoDados = class(TInterfacedObject, iConfiguracaoBancoDados)
  private
    { Campos privados }
    FDriverName: string;
    FServer: string;
    FUsuario: string;
    FSenha: string;
    FPorta: integer;

    function DriverName: string; overload;
    function Server: string; overload;
    function Usuario: string; overload;
    function Senha: string; overload;
    function Porta: string; overload;
    function Parametros: iConfiguracaoBancoDados;
  public
    constructor Create;
    destructor Destroy; override;
    class function New: iConfiguracaoBancoDados;
  end;

implementation

{ TConfiguracaoBancoDados }

function TConfiguracaoBancoDados.Server: string;
begin
  Result := FServer;
end;

constructor TConfiguracaoBancoDados.Create;
begin
  FDriverName := 'SQLite';
  FUsuario := '';
  FSenha := '';
{$IFDEF MSWINDOWS }
  if not DirectoryExists(ExtractFilePath(ParamStr(0)) + 'resources') then
    ForceDirectories(ExtractFilePath(ParamStr(0)) + 'resources');
  FCaminho := ExtractFilePath(ParamStr(0)) + 'resources\Tarefas.db';
{$ELSE }
  if not DirectoryExists(TPath.Combine(TPath.GetDocumentsPath, 'Tarefas')) then
    ForceDirectories(TPath.Combine(TPath.GetDocumentsPath, 'Tarefas'));
  FCaminho := TPath.Combine(TPath.GetDocumentsPath, 'Tarefas') + '/Tarefas.db';
{$ENDIF }
end;

destructor TConfiguracaoBancoDados.Destroy;
begin

  inherited;
end;

function TConfiguracaoBancoDados.DriverName: string;
begin
  Result := FDriverName;
end;

class function TConfiguracaoBancoDados.New: iConfiguracaoBancoDados;
begin
  Result := Self.Create;
end;

function TConfiguracaoBancoDados.Parametros: iConfiguracaoBancoDados;
begin
  Result := Self;
end;

function TConfiguracaoBancoDados.Porta: string;
begin
  F
end;

function TConfiguracaoBancoDados.Senha: string;
begin
  Result := FSenha;
end;

function TConfiguracaoBancoDados.Usuario: string;
begin
  Result := FUsuario;
end;

end.
